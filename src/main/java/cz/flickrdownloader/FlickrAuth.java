package cz.flickrdownloader;

import com.flickr4java.flickr.Flickr;
import com.flickr4java.flickr.REST;
import com.flickr4java.flickr.auth.Permission;
import cz.util.Utils;

import javax.net.ssl.*;
import java.io.FileOutputStream;
import java.security.SecureRandom;
import java.util.Properties;
import java.util.Scanner;

public class FlickrAuth {

    public static void main(String[] args) throws Exception {

        if (args.length != 2) {
            System.out.println("Pouziti: API_KEY, API_SECRET");
            System.exit(1);
        }

        Utils.ignoreCert(); // 1. (Test) Vypnut√≠ validace SSL certifik√°t≈Ø


        // 2. API kl√≠ƒçe
        String apiKey    = args[0];
        String apiSecret = args[1];

        // 3. Inicializace Flickr clienta
        Flickr flickr = new Flickr(apiKey, apiSecret, new REST());

        // 4. OAuth rozhran√≠
        var oauthIface = flickr.getAuthInterface();

        // 5. Z√≠sk√°n√≠ request tokenu
        var requestToken = oauthIface.getRequestToken("oob");

        // 6. URL pro autorizaci
        String authUrl = oauthIface.getAuthorizationUrl(requestToken, Permission.READ);
        System.out.println("üîó Otev≈ôi v prohl√≠≈æeƒçi: " + authUrl);

        // 7. P≈ôeƒçten√≠ verifier k√≥du
        System.out.print("üì• Zadej ovƒõ≈ôovac√≠ k√≥d: ");
        String verifier = new Scanner(System.in).nextLine().trim();

        // 8. V√Ωmƒõna za access token
        var accessToken = oauthIface.getAccessToken(
                requestToken,
                verifier
        );

        // 9. V√Ωpis v√Ωsledku
        System.out.println("‚úÖ Access Token:  " + accessToken.getToken());
        System.out.println("üîê Token Secret:  " + accessToken.getTokenSecret());

        // po z√≠sk√°n√≠ Auth objektu (nap≈ô. po oauth.getAccessToken(...))
        Properties props = new Properties();
        props.setProperty("oauth.token",       accessToken.getToken());
        props.setProperty("oauth.tokenSecret", accessToken.getTokenSecret());

// ulo≈æ√≠me do souboru ve form√°tu key=value
        try (FileOutputStream out = new FileOutputStream("flickr.properties")) {
            props.store(out, "Flickr OAuth tokeny");
        }

    }
}
